<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.brown_carrot_market.mapper.ReviewMapper">
<!-- 
	private int review_no;
	private String review_desc;
	private String review_image;
	private double review_point;
	private Orders orders;
	private UserInfo userInfo;
 -->
 	<resultMap id="reviewResultMap" type="com.itwill.brown_carrot_market.dto.Review">
 		<result column="review_no" property="review_no"/>
 		<result column="review_desc" property="review_desc"/>
 		<result column="your_id" property="your_id"/>
 		<result column="review_point" property="review_point"/>
 		<association property="userInfo" javaType="com.itwill.brown_carrot_market.dto.UserInfo">
			<result column="reviewer_id" property="user_id" />
			<result column="reviewer_name" property="user_name" />
			<result column="reviewer_profile" property="user_profile" />
 		</association>
 		<association property="orders" javaType="com.itwill.brown_carrot_market.dto.Orders">
	 		<result column="orders_no" property="orders_no" />
	 		<result column="orders_date" property="orders_date" />
	 		<association property="userinfo" javaType="com.itwill.brown_carrot_market.dto.UserInfo">
			<result column="buyer_id" property="user_id" />
			<result column="buyer_name" property="user_name" />
			<result column="buyer_profile" property="user_profile" />
	 		</association>
	 		<association property="product" javaType="com.itwill.brown_carrot_market.dto.Product">
	 		<result column="p_no" property="p_no" />
	 		<result column="p_title" property="p_title" />
	 		<result column="p_address_name" property="p_address_name" />
		 		<association property="userInfo" javaType="com.itwill.brown_carrot_market.dto.UserInfo">
				<result column="seller_id" property="user_id" />
				<result column="seller_name" property="user_name" />
				<result column="seller_profile" property="user_profile" />
		 		</association>
	 		</association>
 		</association>
 		<collection property="reviewImageList" javaType="java.util.List" ofType="com.itwill.brown_carrot_market.dto.ReviewImage">
 			<result column="review_img_no" property="review_img_no"/>
 			<result column="review_img_name" property="review_img_name"/>
 			<result column="review_no" property="review_no"/>
 		</collection>
 	</resultMap>
 
 
	<insert id="createReview" parameterType="com.itwill.brown_carrot_market.dto.Review" useGeneratedKeys="true">
		<selectKey keyProperty="review_no" order="BEFORE" resultType="int">
			select review_review_no_seq.nextval from dual
		</selectKey>
		insert into review(review_no,review_desc,your_id,review_point,orders_no,user_id)
    		values(#{review_no},#{review_desc},#{your_id},#{review_point}, #{orders.orders_no},#{userInfo.user_id})
	</insert>
	
	<select id="countReceivedReview" parameterType="String" resultType="int">
		select count(*)
        from review r
			where r.user_id in
				(select o.user_id buyer from product p
				join orders o
				on p.p_no=o.p_no
				where p.user_id = #{user_id})
			or r.user_id in
				(select p.user_id seller from product p
				join orders o
				on p.p_no=o.p_no
				where o.user_id = #{user_id})
	</select>
	
	<!-- 전체후기 : 판매자 or 구매자가 나에게 남긴 후기 -->
	<select id="findReceivedReview" parameterType="String" resultMap="reviewResultMap">
 		select r.review_no, r.review_desc, r.your_id, r.review_point, r.user_id reviewer_id, r.user_name reviewer_name, r.user_profile reviewer_profile,
        oo.orders_no, oo.orders_date, oo.user_id buyer_id, oo.user_name buyer_name, oo.user_profile buyer_profile, oo.p_no,
        pp.p_title, pp.p_address_name, pp.user_id seller_id, pp.user_name seller_name, pp.user_profile seller_profile
        from (select rs.review_no, rs.review_desc, rs.your_id, rs.review_point,rs.orders_no,
                    us.user_id,us.user_name,us.user_profile
                    from review rs
                    join userinfo us
                    on rs.user_id=us.user_id) r
			join (select os.orders_no, os.orders_date, os.p_no,os.user_id,us.user_name,us.user_profile
                    from orders os
                    join userinfo us
                    on os.user_id=us.user_id) oo
			on r.orders_no=oo.orders_no
			join (select ps.p_no, ps.p_title, p_address_name, ps.user_id, us.user_name,us.user_profile
                    from product ps
                    join userinfo us
                    on ps.user_id=us.user_id) pp
			on oo.p_no=pp.p_no
			where r.user_id in
				(select o.user_id buyer from product p
				join orders o
				on p.p_no=o.p_no
				where p.user_id = #{user_id})
			or r.user_id in
				(select p.user_id seller from product p
				join orders o
				on p.p_no=o.p_no
				where o.user_id = #{user_id})
	</select>
	
	<!-- 구매자가 남긴 후기: '판매자(carrot3)'인 경우 -->
	<select id="findReceivedReviewByBuyer" parameterType="String" resultMap="reviewResultMap">
		select * from review r
		join orders oo
		on r.orders_no=oo.orders_no
			where r.user_id in
				(select o.user_id buyer from product p
					join orders o
					on p.p_no=o.p_no
					where p.user_id =#{user_id})
	</select>
	
	<!-- 판매자가 남긴 후기: '구매자(carrot1)'인 경우  -->
	<select id="findReceivedReviewBySeller" parameterType="String" resultMap="reviewResultMap">
		select * from review r
		join orders oo
		on r.orders_no=oo.orders_no
			where r.user_id in
				(select p.user_id seller from product p
					join orders o
					on p.p_no=o.p_no
					where o.user_id = #{user_id})
	</select>
	
	<!-- 후기 1개 보기  -->
	<select id="findReviewByRivewNo" parameterType="int" resultMap="reviewResultMap">
		<!--  
		select *
			from review r
			left outer join review_img ri
			on r.review_no=ri.review_no
			where r.review_no=${review_no}
			-->
		select *
        from review r
        left outer join review_img ri
        on r.review_no=ri.review_no
        join orders o
        on r.orders_no=o.orders_no
        join product p
        on o.p_no=p.p_no
        where r.review_no=${review_no}
	</select>

	<select id="isExistedReviewByOrdersNoId" parameterType="com.itwill.brown_carrot_market.dto.Review" resultType="com.itwill.brown_carrot_market.dto.Review">
		select * from review 
			where orders_no = #{orders.orders_no} and user_id=#{userInfo.user_id}
	</select>

	<delete id="removeReview" parameterType="int">
		delete from review where review_no=#{review_no}
	</delete>
	
	<update id="updateReview" parameterType="com.itwill.brown_carrot_market.dto.Review">
		update review
			set review_desc=#{review_desc}, your_id=#{your_id}, review_point=#{review_point}
			where review_no=#{review_no}
	</update>


</mapper>